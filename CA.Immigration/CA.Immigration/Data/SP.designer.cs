#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CA.Immigration.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SP")]
	public partial class SPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblEvent(tblEvent instance);
    partial void UpdatetblEvent(tblEvent instance);
    partial void DeletetblEvent(tblEvent instance);
    partial void InserttblFollowUP(tblFollowUP instance);
    partial void UpdatetblFollowUP(tblFollowUP instance);
    partial void DeletetblFollowUP(tblFollowUP instance);
    partial void InserttblSPApplication(tblSPApplication instance);
    partial void UpdatetblSPApplication(tblSPApplication instance);
    partial void DeletetblSPApplication(tblSPApplication instance);
    partial void InserttblStudyInfo(tblStudyInfo instance);
    partial void UpdatetblStudyInfo(tblStudyInfo instance);
    partial void DeletetblStudyInfo(tblStudyInfo instance);
    #endregion
		
		public SPDataContext() : 
				base(global::CA.Immigration.Properties.Settings.Default.SPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblEvent> tblEvents
		{
			get
			{
				return this.GetTable<tblEvent>();
			}
		}
		
		public System.Data.Linq.Table<tblFollowUP> tblFollowUPs
		{
			get
			{
				return this.GetTable<tblFollowUP>();
			}
		}
		
		public System.Data.Linq.Table<tblSPApplication> tblSPApplications
		{
			get
			{
				return this.GetTable<tblSPApplication>();
			}
		}
		
		public System.Data.Linq.Table<tblStudyInfo> tblStudyInfos
		{
			get
			{
				return this.GetTable<tblStudyInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEvents")]
	public partial class tblEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _WhatHappend;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWhatHappendChanging(string value);
    partial void OnWhatHappendChanged();
    #endregion
		
		public tblEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatHappend", DbType="VarChar(50)")]
		public string WhatHappend
		{
			get
			{
				return this._WhatHappend;
			}
			set
			{
				if ((this._WhatHappend != value))
				{
					this.OnWhatHappendChanging(value);
					this.SendPropertyChanging();
					this._WhatHappend = value;
					this.SendPropertyChanged("WhatHappend");
					this.OnWhatHappendChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFollowUPs")]
	public partial class tblFollowUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ApplicationId;
		
		private System.DateTime _HappenDate;
		
		private int _WhatHappenedId;
		
		private System.Nullable<System.DateTime> _ResponseDate;
		
		private string _Response;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnHappenDateChanging(System.DateTime value);
    partial void OnHappenDateChanged();
    partial void OnWhatHappenedIdChanging(int value);
    partial void OnWhatHappenedIdChanged();
    partial void OnResponseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnResponseDateChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    #endregion
		
		public tblFollowUP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HappenDate", DbType="Date NOT NULL")]
		public System.DateTime HappenDate
		{
			get
			{
				return this._HappenDate;
			}
			set
			{
				if ((this._HappenDate != value))
				{
					this.OnHappenDateChanging(value);
					this.SendPropertyChanging();
					this._HappenDate = value;
					this.SendPropertyChanged("HappenDate");
					this.OnHappenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhatHappenedId", DbType="Int NOT NULL")]
		public int WhatHappenedId
		{
			get
			{
				return this._WhatHappenedId;
			}
			set
			{
				if ((this._WhatHappenedId != value))
				{
					this.OnWhatHappenedIdChanging(value);
					this.SendPropertyChanging();
					this._WhatHappenedId = value;
					this.SendPropertyChanged("WhatHappenedId");
					this.OnWhatHappenedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseDate", DbType="Date")]
		public System.Nullable<System.DateTime> ResponseDate
		{
			get
			{
				return this._ResponseDate;
			}
			set
			{
				if ((this._ResponseDate != value))
				{
					this.OnResponseDateChanging(value);
					this.SendPropertyChanging();
					this._ResponseDate = value;
					this.SendPropertyChanged("ResponseDate");
					this.OnResponseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="VarChar(100)")]
		public string Response
		{
			get
			{
				return this._Response;
			}
			set
			{
				if ((this._Response != value))
				{
					this.OnResponseChanging(value);
					this.SendPropertyChanging();
					this._Response = value;
					this.SendPropertyChanged("Response");
					this.OnResponseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSPApplication")]
	public partial class tblSPApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ApplicationId;
		
		private System.Nullable<int> _ApplicationType;
		
		private System.Nullable<bool> _ApplyFromCurrentResidence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    partial void OnApplicationTypeChanging(System.Nullable<int> value);
    partial void OnApplicationTypeChanged();
    partial void OnApplyFromCurrentResidenceChanging(System.Nullable<bool> value);
    partial void OnApplyFromCurrentResidenceChanged();
    #endregion
		
		public tblSPApplication()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationType", DbType="Int")]
		public System.Nullable<int> ApplicationType
		{
			get
			{
				return this._ApplicationType;
			}
			set
			{
				if ((this._ApplicationType != value))
				{
					this.OnApplicationTypeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationType = value;
					this.SendPropertyChanged("ApplicationType");
					this.OnApplicationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyFromCurrentResidence", DbType="Bit")]
		public System.Nullable<bool> ApplyFromCurrentResidence
		{
			get
			{
				return this._ApplyFromCurrentResidence;
			}
			set
			{
				if ((this._ApplyFromCurrentResidence != value))
				{
					this.OnApplyFromCurrentResidenceChanging(value);
					this.SendPropertyChanging();
					this._ApplyFromCurrentResidence = value;
					this.SendPropertyChanged("ApplyFromCurrentResidence");
					this.OnApplyFromCurrentResidenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudyInfo")]
	public partial class tblStudyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ApplicationId;
		
		private string _SchoolName;
		
		private System.Nullable<int> _LevelId;
		
		private System.Nullable<int> _FieldId;
		
		private System.Nullable<int> _ProvinceId;
		
		private System.Nullable<int> _CityId;
		
		private string _SchoolAddress;
		
		private string _DLINumber;
		
		private string _StudentId;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.Nullable<System.DateTime> _Todate;
		
		private System.Nullable<int> _Tuition;
		
		private System.Nullable<decimal> _RoomAndBoard;
		
		private System.Nullable<decimal> _Othercost;
		
		private System.Nullable<decimal> _FundsAvailable;
		
		private string _WhoPayId;
		
		private string _OtherPayer;
		
		private System.Nullable<bool> _ApplyWP;
		
		private string _TypeofWP;
		
		private string _CAQNumber;
		
		private System.Nullable<System.DateTime> _CAQExpriyDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApplicationIdChanging(System.Nullable<int> value);
    partial void OnApplicationIdChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnLevelIdChanging(System.Nullable<int> value);
    partial void OnLevelIdChanged();
    partial void OnFieldIdChanging(System.Nullable<int> value);
    partial void OnFieldIdChanged();
    partial void OnProvinceIdChanging(System.Nullable<int> value);
    partial void OnProvinceIdChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    partial void OnSchoolAddressChanging(string value);
    partial void OnSchoolAddressChanged();
    partial void OnDLINumberChanging(string value);
    partial void OnDLINumberChanged();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnTodateChanging(System.Nullable<System.DateTime> value);
    partial void OnTodateChanged();
    partial void OnTuitionChanging(System.Nullable<int> value);
    partial void OnTuitionChanged();
    partial void OnRoomAndBoardChanging(System.Nullable<decimal> value);
    partial void OnRoomAndBoardChanged();
    partial void OnOthercostChanging(System.Nullable<decimal> value);
    partial void OnOthercostChanged();
    partial void OnFundsAvailableChanging(System.Nullable<decimal> value);
    partial void OnFundsAvailableChanged();
    partial void OnWhoPayIdChanging(string value);
    partial void OnWhoPayIdChanged();
    partial void OnOtherPayerChanging(string value);
    partial void OnOtherPayerChanged();
    partial void OnApplyWPChanging(System.Nullable<bool> value);
    partial void OnApplyWPChanged();
    partial void OnTypeofWPChanging(string value);
    partial void OnTypeofWPChanged();
    partial void OnCAQNumberChanging(string value);
    partial void OnCAQNumberChanged();
    partial void OnCAQExpriyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCAQExpriyDateChanged();
    #endregion
		
		public tblStudyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int")]
		public System.Nullable<int> ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="VarChar(100)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelId", DbType="Int")]
		public System.Nullable<int> LevelId
		{
			get
			{
				return this._LevelId;
			}
			set
			{
				if ((this._LevelId != value))
				{
					this.OnLevelIdChanging(value);
					this.SendPropertyChanging();
					this._LevelId = value;
					this.SendPropertyChanged("LevelId");
					this.OnLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldId", DbType="Int")]
		public System.Nullable<int> FieldId
		{
			get
			{
				return this._FieldId;
			}
			set
			{
				if ((this._FieldId != value))
				{
					this.OnFieldIdChanging(value);
					this.SendPropertyChanging();
					this._FieldId = value;
					this.SendPropertyChanged("FieldId");
					this.OnFieldIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceId", DbType="Int")]
		public System.Nullable<int> ProvinceId
		{
			get
			{
				return this._ProvinceId;
			}
			set
			{
				if ((this._ProvinceId != value))
				{
					this.OnProvinceIdChanging(value);
					this.SendPropertyChanging();
					this._ProvinceId = value;
					this.SendPropertyChanged("ProvinceId");
					this.OnProvinceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
		public System.Nullable<int> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolAddress", DbType="VarChar(100)")]
		public string SchoolAddress
		{
			get
			{
				return this._SchoolAddress;
			}
			set
			{
				if ((this._SchoolAddress != value))
				{
					this.OnSchoolAddressChanging(value);
					this.SendPropertyChanging();
					this._SchoolAddress = value;
					this.SendPropertyChanged("SchoolAddress");
					this.OnSchoolAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLINumber", DbType="Char(12)")]
		public string DLINumber
		{
			get
			{
				return this._DLINumber;
			}
			set
			{
				if ((this._DLINumber != value))
				{
					this.OnDLINumberChanging(value);
					this.SendPropertyChanging();
					this._DLINumber = value;
					this.SendPropertyChanged("DLINumber");
					this.OnDLINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="VarChar(15)")]
		public string StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Todate", DbType="Date")]
		public System.Nullable<System.DateTime> Todate
		{
			get
			{
				return this._Todate;
			}
			set
			{
				if ((this._Todate != value))
				{
					this.OnTodateChanging(value);
					this.SendPropertyChanging();
					this._Todate = value;
					this.SendPropertyChanged("Todate");
					this.OnTodateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tuition", DbType="Int")]
		public System.Nullable<int> Tuition
		{
			get
			{
				return this._Tuition;
			}
			set
			{
				if ((this._Tuition != value))
				{
					this.OnTuitionChanging(value);
					this.SendPropertyChanging();
					this._Tuition = value;
					this.SendPropertyChanged("Tuition");
					this.OnTuitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomAndBoard", DbType="Money")]
		public System.Nullable<decimal> RoomAndBoard
		{
			get
			{
				return this._RoomAndBoard;
			}
			set
			{
				if ((this._RoomAndBoard != value))
				{
					this.OnRoomAndBoardChanging(value);
					this.SendPropertyChanging();
					this._RoomAndBoard = value;
					this.SendPropertyChanged("RoomAndBoard");
					this.OnRoomAndBoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Othercost", DbType="Money")]
		public System.Nullable<decimal> Othercost
		{
			get
			{
				return this._Othercost;
			}
			set
			{
				if ((this._Othercost != value))
				{
					this.OnOthercostChanging(value);
					this.SendPropertyChanging();
					this._Othercost = value;
					this.SendPropertyChanged("Othercost");
					this.OnOthercostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundsAvailable", DbType="Money")]
		public System.Nullable<decimal> FundsAvailable
		{
			get
			{
				return this._FundsAvailable;
			}
			set
			{
				if ((this._FundsAvailable != value))
				{
					this.OnFundsAvailableChanging(value);
					this.SendPropertyChanging();
					this._FundsAvailable = value;
					this.SendPropertyChanged("FundsAvailable");
					this.OnFundsAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhoPayId", DbType="NVarChar(50)")]
		public string WhoPayId
		{
			get
			{
				return this._WhoPayId;
			}
			set
			{
				if ((this._WhoPayId != value))
				{
					this.OnWhoPayIdChanging(value);
					this.SendPropertyChanging();
					this._WhoPayId = value;
					this.SendPropertyChanged("WhoPayId");
					this.OnWhoPayIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherPayer", DbType="VarChar(50)")]
		public string OtherPayer
		{
			get
			{
				return this._OtherPayer;
			}
			set
			{
				if ((this._OtherPayer != value))
				{
					this.OnOtherPayerChanging(value);
					this.SendPropertyChanging();
					this._OtherPayer = value;
					this.SendPropertyChanged("OtherPayer");
					this.OnOtherPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplyWP", DbType="Bit")]
		public System.Nullable<bool> ApplyWP
		{
			get
			{
				return this._ApplyWP;
			}
			set
			{
				if ((this._ApplyWP != value))
				{
					this.OnApplyWPChanging(value);
					this.SendPropertyChanging();
					this._ApplyWP = value;
					this.SendPropertyChanged("ApplyWP");
					this.OnApplyWPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeofWP", DbType="VarChar(50)")]
		public string TypeofWP
		{
			get
			{
				return this._TypeofWP;
			}
			set
			{
				if ((this._TypeofWP != value))
				{
					this.OnTypeofWPChanging(value);
					this.SendPropertyChanging();
					this._TypeofWP = value;
					this.SendPropertyChanged("TypeofWP");
					this.OnTypeofWPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAQNumber", DbType="VarChar(50)")]
		public string CAQNumber
		{
			get
			{
				return this._CAQNumber;
			}
			set
			{
				if ((this._CAQNumber != value))
				{
					this.OnCAQNumberChanging(value);
					this.SendPropertyChanging();
					this._CAQNumber = value;
					this.SendPropertyChanged("CAQNumber");
					this.OnCAQNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAQExpriyDate", DbType="Date")]
		public System.Nullable<System.DateTime> CAQExpriyDate
		{
			get
			{
				return this._CAQExpriyDate;
			}
			set
			{
				if ((this._CAQExpriyDate != value))
				{
					this.OnCAQExpriyDateChanging(value);
					this.SendPropertyChanging();
					this._CAQExpriyDate = value;
					this.SendPropertyChanged("CAQExpriyDate");
					this.OnCAQExpriyDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
